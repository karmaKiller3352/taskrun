{"version":3,"sources":["redux/types.js","redux/actions.js","components/Loader.js","components/Projects.js","components/ProjectForm.js","pages/ProjectsPage.js","pages/HomePage.js","pages/NoMatchPage.js","components/Navbar.js","utils/time.js","components/Project.js","components/EditProjectForm.js","pages/ProjectPage.js","components/Timer.js","components/TasksList.js","components/TasksFilter.js","components/TaskForm.js","pages/TasksPage.js","components/AppModal.js","components/Task.js","pages/TaskPage.js","App.js","serviceWorker.js","redux/projectsReducer.js","redux/tasksReducer.js","redux/appReducer.js","redux/modalReducer.js","redux/rootReducer.js","redux/api.js","redux/sagas.js","index.js"],"names":["SET_PROJECT","SET_TASK","removeProjectRequest","id","dispatch","type","payload","fetchProjects","hideEditForm","hideModal","Loader","Spinner","animation","role","variant","size","className","mapDispatchtoProps","connect","state","loading","app","projects","sort","a","b","created","useEffect","length","map","project","Card","key","objectId","Body","Title","to","NAME","aria-label","onClick","e","aria-hidden","addProjectRequest","useState","currentFields","setField","formref","useRef","IDEref","changeInputHandler","target","name","value","prev","Form","ref","onSubmit","preventDefault","current","reset","Group","controlId","Label","Control","required","onChange","placeholder","FormControl","as","editor","data","getData","DESCRIPTION","ClassicEditor","Button","Fragment","Row","Col","md","Home","NoMatchPage","Navbar","expand","Container","Toggle","aria-controls","Collapse","Nav","exact","msToTime","unix_timestamp","Date","toISOString","slice","fetchProject","showEditForm","openProject","html","history","useHistory","useParams","Header","toLocaleDateString","push","removeProjectHandler","dangerouslySetInnerHTML","__html","FTP","URL","rel","href","TIMESPENT","changeProjectRequest","edit","console","log","ProjectPage","Timer","status","spentTime","start","getTime","startTime","now","time","setTime","timerId","clearTimeout","setTimeout","prevTime","tasks","filter","currentFilter","ALL","class","text","included","OPEN","IN_WORK","PAUSED","FINISHED","scope","reduce","acc","filterName","STATUS","task","TITLE","PROJECT","SPENT_TIME","START_TIME","changeTaskFilter","filterValues","badgeClass","localStorage","setItem","count","addTaskRequest","changeSelectHandler","custom","fetchTasks","showModal","title","component","TaskForm","modal","InnerComponent","show","Modal","onHide","closeButton","fetchTask","changeTaskRequest","openTask","localtime","currenTime","disabled","TaskPage","App","basename","process","path","HomePage","ProjectsPage","TasksPage","Boolean","window","location","hostname","match","initialState","projectsReducer","action","getItem","tasksReducer","initState","alert","appReducer","modalReducer","rootReducer","combineReducers","PROJECTS_API","TASKS_API","changeProject","axios","put","get","removeProject","delete","addProject","post","changeTask","addTask","tasktId","urs","sagaWatcher","sagaChangeTask","sagaFetchTask","sagaAddTask","sagaChangeProject","sagaFetchProject","sagaRemoveProject","sagaAddProject","sagaFetchProjects","sagaFetchTasks","takeEvery","call","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","thunk","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c3b60797.chunk.js","sourcesContent":["// ASYNC REQUEST TYPES\n// - PROJECTS:\nexport const ADD_PROJECT_REQUEST = 'PROJECT/ADD_PROJECT_REQUEST';\nexport const CHANGE_PROJECT_REQUEST = 'PROJECT/CHANGE_PROJECT_REQUEST';\nexport const REMOVE_PROJECT_REQUEST = 'PROJECT/REMOVE_PROJECT_REQUEST';\nexport const REQUEST_PROJECTS = 'PROJECT/REQUEST_PROJECTS';\nexport const REQUEST_PROJECT = 'PROJECT/REQUEST_PROJECT';\n\n// - TASKS:\nexport const ADD_TASK_REQUEST = 'TASK/ADD_TASK_REQUEST';\nexport const CHANGE_TASK_REQUEST = 'TASK/CHANGE_TASK_REQUEST';\nexport const REMOVE_TASK_REQUEST = 'TASK/REMOVE_TASK_REQUEST';\nexport const REQUEST_TASKS = 'TASK/REQUEST_TASKS';\nexport const REQUEST_TASK = 'TASK/REQUEST_TASK';\n\n// WORK WITH STATE\n// - PROJECTS:\nexport const ADD_PROJECT = 'PROJECT/ADD_PROJECT';\nexport const SET_PROJECT = 'PROJECT/SET_PROJECT';\nexport const REMOVE_PROJECT = 'PROJECT/REMOVE_PROJECT';\nexport const FETCH_PROJECTS = 'PROJECT/FETCH_PROJECTS';\n\n// - TASKS:\nexport const ADD_TASK = 'TASK/ADD_TASK';\nexport const SET_TASK = 'TASK/SET_TASK';\nexport const REMOVE_TASK = 'TASK/REMOVE_TASK';\nexport const FETCH_TASKS = 'TASK/FETCH_TASKS';\n\n// - FILTER\nexport const CHANGE_TASK_FILTER = 'TASK/CHANGE_TASK_FILTER';\n\n// - MODAL\nexport const SHOW_MODAL = 'APP/SHOW_MODAL';\nexport const HIDE_MODAL = 'APP/HIDE_MODAL';\n\n// APP STATES\n// - LOADER\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\n\n// - EDIT_FORM\nexport const SHOW_EDIT_FORM = 'APP/SHOW_EDIT_FORM';\nexport const HIDE_EDIT_FORM = 'APP/HIDE_EDIT_FORM';\n\n// - ALLERTS\nexport const SHOW_ALERT = 'APP/SHOW_ALERT';\nexport const HIDE_ALERT = 'APP/HIDE_ALERT';\n","import {\n  REQUEST_PROJECTS,\n  ADD_PROJECT_REQUEST,\n  SHOW_LOADER,\n  HIDE_LOADER,\n  SHOW_ALERT,\n  HIDE_ALERT,\n  REMOVE_PROJECT_REQUEST,\n  REQUEST_PROJECT,\n  SHOW_EDIT_FORM,\n  HIDE_EDIT_FORM,\n  CHANGE_PROJECT_REQUEST,\n  REMOVE_TASK_REQUEST,\n  CHANGE_TASK_REQUEST,\n  REQUEST_TASKS,\n  ADD_TASK_REQUEST,\n  REQUEST_TASK,\n  CHANGE_TASK_FILTER,\n  HIDE_MODAL,\n  SHOW_MODAL,\n  SET_TASK,\n} from './types';\n\n// REQUEST ACTIONS\n// - PROJECTS:\nexport function removeProjectRequest(id) {\n  return (dispatch) => {\n    dispatch({\n      type: REMOVE_PROJECT_REQUEST,\n      payload: id,\n    });\n  };\n}\n\nexport function addProjectRequest(project) {\n  return (dispatch) => {\n    dispatch({\n      type: ADD_PROJECT_REQUEST,\n      payload: project,\n    });\n  };\n}\n\nexport function changeProjectRequest(project) {\n  return (dispatch) => {\n    dispatch({\n      type: CHANGE_PROJECT_REQUEST,\n      payload: project,\n    });\n  };\n}\n\nexport function fetchProjects() {\n  return (dispatch) => {\n    dispatch({\n      type: REQUEST_PROJECTS,\n    });\n  };\n}\n\nexport function fetchProject(id) {\n  return (dispatch) => {\n    dispatch({\n      type: REQUEST_PROJECT,\n      payload: id,\n    });\n  };\n}\n\n// - TASKS:\nexport function removeTaskRequest(id) {\n  return (dispatch) => {\n    dispatch({\n      type: REMOVE_TASK_REQUEST,\n      payload: id,\n    });\n  };\n}\n\nexport function addTaskRequest(task) {\n  return (dispatch) => {\n    dispatch({\n      type: ADD_TASK_REQUEST,\n      payload: task,\n    });\n  };\n}\n\nexport function changeTaskRequest(task) {\n  return (dispatch) => {\n    dispatch({\n      type: CHANGE_TASK_REQUEST,\n      payload: task,\n    });\n  };\n}\n\nexport function fetchTasks() {\n  return (dispatch) => {\n    dispatch({\n      type: REQUEST_TASKS,\n    });\n  };\n}\n\nexport function fetchTask(id) {\n  return (dispatch) => {\n    dispatch({\n      type: REQUEST_TASK,\n      payload: id,\n    });\n  };\n}\n\nexport function setTask(task) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_TASK,\n      payload: task,\n    });\n  };\n}\n\n// TASKS FILTER\n\nexport function changeTaskFilter(value) {\n  return {\n    type: CHANGE_TASK_FILTER,\n    payload: value,\n  };\n}\n\n// APP actions\nexport function showEditForm() {\n  return {\n    type: SHOW_EDIT_FORM,\n  };\n}\n\nexport function hideEditForm() {\n  return {\n    type: HIDE_EDIT_FORM,\n  };\n}\n\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER,\n  };\n}\n\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER,\n  };\n}\n\nexport function showAlert(text) {\n  return (dispatch) => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: text,\n    });\n\n    setTimeout(() => {\n      dispatch(hideAlert());\n    }, 3000);\n  };\n}\n\nexport function hideAlert() {\n  return {\n    type: HIDE_ALERT,\n  };\n}\n\nexport function showModal({ title, component }) {\n  return {\n    type: SHOW_MODAL,\n    payload: {\n      title,\n      component,\n    },\n  };\n}\n\nexport function hideModal() {\n  return {\n    type: HIDE_MODAL,\n  };\n}\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => (\n  <Spinner animation='grow' role='status' variant='info' size='lg'>\n    <span className='sr-only'>Loading...</span>\n  </Spinner>\n);\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchProjects, removeProjectRequest } from '../redux/actions';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Loader from '../components/Loader';\n\nconst mapDispatchtoProps = {\n  fetchProjects,\n  removeProjectRequest,\n};\nconst mapStatetoProps = (state) => {\n  return {\n    loading: state.app.loading,\n    projects: state.projects.projects.sort((a, b) => b.created - a.created),\n  };\n};\n\nfunction Projects({ projects, loading, fetchProjects, removeProjectRequest }) {\n  useEffect(() => {\n    //Load projects from Database\n    fetchProjects();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n  const removeProjectHandler = (id) => (e) => {\n    removeProjectRequest(id);\n  };\n\n  return projects.length > 0\n    ? projects.map((project) => {\n        return (\n          <Card className='border-info mb-1' key={project.objectId}>\n            <Card.Body>\n              <Card.Title>\n                <Link to={`/projects/${project.objectId}`}>{project.NAME}</Link>\n                <button\n                  type='button'\n                  className='close'\n                  aria-label='Close'\n                  onClick={removeProjectHandler(project.objectId)}\n                >\n                  <span aria-hidden='true'>&times;</span>\n                </button>\n              </Card.Title>\n            </Card.Body>\n          </Card>\n        );\n      })\n    : null;\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Projects);\n","import React, { useState, useRef } from 'react';\nimport { Form, Button, FormControl } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { addProjectRequest } from '../redux/actions';\n\nfunction ProjectForm({ addProjectRequest }) {\n  const [currentFields, setField] = useState({});\n\n  const formref = useRef();\n  const IDEref = useRef();\n\n  const changeInputHandler = ({ target: { name, value } }) => {\n    setField((prev) => ({\n      ...prev,\n      ...{\n        [name]: value,\n      },\n    }));\n  };\n  const submitFormHandler = (e) => {\n    e.preventDefault();\n    addProjectRequest(currentFields);\n    formref.current.reset();\n  };\n\n  return (\n    <Form\n      ref={formref}\n      className='project-form border-info'\n      onSubmit={submitFormHandler}\n    >\n      <Form.Group controlId='projectName'>\n        <Form.Label>Project name</Form.Label>\n        <Form.Control\n          name='NAME'\n          required\n          onChange={changeInputHandler}\n          placeholder='Enter project name'\n        />\n      </Form.Group>\n\n      <Form.Group controlId='projectUrl'>\n        <Form.Label>Project URL</Form.Label>\n        <Form.Control\n          name='URL'\n          required\n          type='url'\n          onChange={changeInputHandler}\n          placeholder='Enter project url'\n        />\n      </Form.Group>\n      <Form.Group controlId='projectAccess'>\n        <Form.Label>Project's access</Form.Label>\n        <FormControl\n          onChange={changeInputHandler}\n          as='textarea'\n          name='FTP'\n          placeholder='Enter project`s access'\n        />\n      </Form.Group>\n      <Form.Group controlId='projectDesc'>\n        <Form.Label>Project description</Form.Label>\n        <CKEditor\n          ref={IDEref}\n          onChange={(e, editor) => {\n            const data = editor.getData();\n            setField((prev) => ({\n              ...prev,\n              ...{\n                DESCRIPTION: data,\n              },\n            }));\n          }}\n          editor={ClassicEditor}\n        ></CKEditor>\n      </Form.Group>\n      <Button variant='primary' className='btn-lg' type='submit'>\n        Add\n      </Button>\n    </Form>\n  );\n}\nconst mapStatetoProps = () => ({});\n\nconst mapDispatchtoProps = {\n  addProjectRequest,\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(ProjectForm);\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport Projects from '../components/Projects';\nimport ProjectForm from '../components/ProjectForm';\n\nexport default () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <Col md={6}>\n          <h3>Projects</h3>\n          <br />\n          <Projects />\n        </Col>\n        <Col md={6}>\n          <h3>Add project</h3>\n          <br />\n          <ProjectForm />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nexport default function Home() {\n  return <h2>Home page</h2>;\n}\n","import React from 'react';\nexport default function NoMatchPage() {\n  return <h2>Page not found</h2>;\n}\n","import React from 'react';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nexport default function () {\n  return (\n    <Navbar className='navbar-dark bg-primary' expand='lg'>\n      <Container>\n        <NavLink className='navbar-brand' to={'/'}>\n          Task-Run\n        </NavLink>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='mr-auto'>\n            <NavLink className='nav-link' exact to={'/tasks/'}>\n              Tasks\n            </NavLink>\n            <NavLink className='nav-link' to={'/projects/'}>\n              Projects\n            </NavLink>\n            <NavLink className='nav-link' to={'/reports/'}>\n              Reports\n            </NavLink>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","export const msToTime = (unix_timestamp) => {\n  return new Date(unix_timestamp).toISOString().slice(-13, -5);\n};\n","import React, { useEffect } from 'react';\n//import { Row, Col, Button } from 'react-bootstrap';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport {\n  fetchProject,\n  removeProjectRequest,\n  showEditForm,\n} from '../redux/actions';\nimport Loader from '../components/Loader';\nimport { Card, Button } from 'react-bootstrap';\nimport { msToTime } from '../utils/time';\nfunction createMarkup(html) {\n  return { __html: html };\n}\n\nfunction Project({\n  project,\n  loading,\n  fetchProject,\n  removeProjectRequest,\n  showEditForm,\n}) {\n  const history = useHistory();\n  const { id } = useParams();\n  useEffect(() => {\n    //Load projects from Database\n    fetchProject(id);\n  }, [fetchProject, id]);\n\n  if (loading) {\n    return <Loader />;\n  }\n  const removeProjectHandler = (id) => (e) => {\n    removeProjectRequest(id);\n    history.push('/projects/');\n  };\n\n  const changeProjectHandler = (e) => {\n    showEditForm();\n  };\n\n  return project.objectId ? (\n    <React.Fragment>\n      <Card className='card border-info bg-primary mb-3 mt-4'>\n        <Card.Header className='text-white d-flex justify-content-between'>\n          <h1>{project.NAME}</h1>\n          <div className='right'>\n            <small>\n              In work from {new Date(project.created).toLocaleDateString()}\n            </small>\n            <div className='btn-group'>\n              <Button\n                type='button'\n                className='btn btn-info btn-sm'\n                onClick={changeProjectHandler}\n              >\n                Edit\n              </Button>\n              <Button\n                type='button'\n                className='btn btn-danger btn-sm'\n                onClick={removeProjectHandler(project.objectId)}\n              >\n                Delete\n              </Button>\n            </div>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          {project.DESCRIPTION && (\n            <div\n              className='description '\n              dangerouslySetInnerHTML={createMarkup(project.DESCRIPTION)}\n            ></div>\n          )}\n          {project.FTP && (\n            <>\n              <Card.Title>\n                <h4>Project access:</h4>\n              </Card.Title>\n              <div className='assecc'>{project.FTP}</div>\n            </>\n          )}\n          {project.URL && (\n            <>\n              <Card.Title>\n                <h4>Project link:</h4>\n              </Card.Title>\n              <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href={project.URL}\n                className='link'\n              >\n                {project.URL}\n              </a>\n            </>\n          )}\n\n          <>\n            <Card.Title>\n              <h4>Spent time:</h4>\n            </Card.Title>\n            <div>{msToTime(project.TIMESPENT)}</div>\n          </>\n        </Card.Body>\n      </Card>\n    </React.Fragment>\n  ) : (\n    <h1>Project not found</h1>\n  );\n}\nconst mapStatetoProps = (state) => ({\n  project: state.projects.openProject,\n  loading: state.app.loading,\n});\n\nconst mapDispatchtoProps = {\n  fetchProject,\n  removeProjectRequest,\n  showEditForm,\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Project);\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Form, Button, FormControl } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n//import InlineEditor from '@ckeditor/ckeditor5-editor-inline';\n\nimport { hideEditForm, changeProjectRequest } from '../redux/actions';\n\nfunction EditProjectForm({\n  changeProjectRequest,\n  project,\n  edit,\n  hideEditForm,\n}) {\n  const [currentFields, setField] = useState();\n\n  useEffect(() => {\n    // returned function will be called on component unmount\n    return () => hideEditForm();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    setField(project);\n  }, [project]);\n\n  const formref = useRef();\n\n  const changeInputHandler = ({ target: { name, value } }) => {\n    console.log(value);\n    setField((prev) => ({\n      ...prev,\n      ...{\n        [name]: value,\n      },\n    }));\n  };\n  const submitFormHandler = (e) => {\n    e.preventDefault();\n    changeProjectRequest(currentFields);\n    //formref.current.reset();\n  };\n\n  const hideFormHandler = () => {\n    hideEditForm();\n  };\n\n  if (!edit) return null;\n  return (\n    <Form\n      ref={formref}\n      className='project-form border-info mt-4'\n      onSubmit={submitFormHandler}\n    >\n      <button\n        type='button'\n        className='close'\n        onClick={hideFormHandler}\n        aria-label='Close'\n      >\n        <span aria-hidden='true'>&times;</span>\n      </button>\n      <Form.Group controlId='projectName'>\n        <Form.Label>Project name</Form.Label>\n        <Form.Control\n          name='NAME'\n          required\n          value={currentFields.NAME}\n          onChange={changeInputHandler}\n          placeholder='Enter project name'\n        />\n      </Form.Group>\n\n      <Form.Group controlId='projectUrl'>\n        <Form.Label>Project URL</Form.Label>\n        <Form.Control\n          name='URL'\n          required\n          type='url'\n          value={currentFields.URL}\n          onChange={changeInputHandler}\n          placeholder='Enter project url'\n        />\n      </Form.Group>\n      <Form.Group controlId='projectAccess'>\n        <Form.Label>Project's access</Form.Label>\n        <FormControl\n          onChange={changeInputHandler}\n          as='textarea'\n          value={currentFields.FTP ? currentFields.FTP : ''}\n          name='FTP'\n          placeholder='Enter project`s access'\n        />\n      </Form.Group>\n      <Form.Group controlId='projectDesc'>\n        <Form.Label>Project description</Form.Label>\n\n        <CKEditor\n          data={currentFields.DESCRIPTION ? currentFields.DESCRIPTION : ''}\n          onChange={(e, editor) => {\n            const data = editor.getData();\n            setField((prev) => ({\n              ...prev,\n              ...{\n                DESCRIPTION: data,\n              },\n            }));\n          }}\n          editor={ClassicEditor}\n        ></CKEditor>\n      </Form.Group>\n      <Button variant='primary' className='btn-lg' type='submit'>\n        Save changes\n      </Button>\n    </Form>\n  );\n}\nconst mapStatetoProps = (state) => ({\n  project: state.projects.openProject,\n  edit: state.app.edit,\n});\n\nconst mapDispatchtoProps = {\n  changeProjectRequest,\n  hideEditForm,\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(EditProjectForm);\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport Project from '../components/Project';\nimport EditProjectForm from '../components/EditProjectForm';\n\nfunction ProjectPage() {\n  return (\n    <Row>\n      <Col md={7}>\n        <Project />\n      </Col>\n      <Col md={5}>\n        <EditProjectForm />\n      </Col>\n    </Row>\n  );\n}\n\nexport default ProjectPage;\n","import { useEffect, useState, useRef } from 'react';\nimport { msToTime } from '../utils/time';\n\nfunction Timer({ status, spentTime, start, getTime }) {\n  const startTime = spentTime\n    ? Date.now() - start + spentTime\n    : !spentTime && !start\n    ? 0\n    : Date.now() - start;\n\n  const [time, setTime] = useState(startTime);\n\n  const timerId = useRef(false);\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(timerId.current);\n    };\n  }, []);\n  if (getTime) getTime(time);\n\n  switch (status) {\n    case 'FINISHED': {\n      clearTimeout(timerId.current);\n      return msToTime(spentTime);\n    }\n    case 'PAUSED': {\n      clearTimeout(timerId.current);\n      return msToTime(spentTime);\n    }\n    case 'IN_WORK': {\n      timerId.current = setTimeout(() => {\n        console.log(timerId.current);\n        setTime((prevTime) => prevTime + 1000);\n      }, 1000);\n      return msToTime(time);\n    }\n    default: {\n      clearTimeout(timerId.current);\n      return msToTime(time);\n    }\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Timer from './Timer';\n\nconst mapDispatchtoProps = {};\nfunction mapStatetoProps(state) {\n  return {\n    loading: state.app.loading,\n    tasks: state.tasks.tasks.sort((a, b) => b.created - a.created),\n    filter: state.tasks.currentFilter,\n  };\n}\n\nfunction TasksList({ loading, tasks, filter }) {\n  if (loading) {\n    return <Loader />;\n  }\n\n  const status = {\n    ALL: {\n      class: '',\n      text: 'All tasks',\n      included: ['OPEN', 'IN_WORK', 'PAUSED', 'FINISHED'],\n    },\n    OPEN: {\n      class: 'danger',\n      text: 'Open',\n      included: ['OPEN', 'IN_WORK', 'PAUSED'],\n    },\n    IN_WORK: {\n      class: 'info',\n      text: 'In work',\n      included: ['IN_WORK'],\n    },\n    PAUSED: {\n      class: 'warning',\n      text: 'Paused',\n      included: ['PAUSED'],\n    },\n    FINISHED: {\n      class: 'secondary',\n      text: 'Finished',\n      included: ['FINISHED'],\n    },\n  };\n\n  function showTableRow() {\n    const filteredTasks = status[filter].included.reduce(\n      (acc, filterName) => [\n        ...acc,\n        ...tasks.filter(({ STATUS }) => STATUS === filterName),\n      ],\n      []\n    );\n\n    return filteredTasks.map((task) => {\n      return (\n        <tr\n          key={task.objectId}\n          className={`table-active ${\n            task.STATUS === 'FINISHED' ? 'finished' : ''\n          }`}\n        >\n          <th scope='row'>\n            <Link to={`/tasks/${task.objectId}`}>{task.TITLE}</Link>\n          </th>\n          <td>\n            {task.PROJECT ? (\n              <Link to={`/projects/${task.PROJECT.objectId}`}>\n                {task.PROJECT.NAME}\n              </Link>\n            ) : (\n              '--------------'\n            )}\n          </td>\n\n          <td>\n            <Timer\n              status={task.STATUS}\n              spentTime={task.SPENT_TIME}\n              start={task.START_TIME}\n              getTime={false}\n            />\n          </td>\n          <td>\n            <span className={`badge badge-${status[task.STATUS].class}`}>\n              {status[task.STATUS].text}\n            </span>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  return tasks.length > 0 ? (\n    <table className='table table-hover'>\n      <thead>\n        <tr>\n          <th scope='col'>Title</th>\n          <th scope='col'>Project</th>\n          <th scope='col'>Spent time</th>\n          <th scope='col'>Status</th>\n        </tr>\n      </thead>\n      <tbody>{showTableRow()}</tbody>\n    </table>\n  ) : (\n    'No tasks '\n  );\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(TasksList);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Loader from '../components/Loader';\nimport { changeTaskFilter } from '../redux/actions';\n\nconst mapDispatchtoProps = {\n  changeTaskFilter,\n};\nconst mapStatetoProps = (state) => {\n  return {\n    loading: state.app.loading,\n    tasks: state.tasks.tasks.sort((a, b) => b.created - a.created),\n    filter: state.tasks.currentFilter,\n  };\n};\n\nconst filterValues = [\n  {\n    value: 'ALL',\n    text: 'ALL TASKS',\n    badgeClass: 'success',\n    status: ['OPEN', 'IN_WORK', 'PAUSED', 'FINISHED'],\n  },\n  {\n    value: 'OPEN',\n    text: '- OPEN',\n    badgeClass: 'danger',\n    status: ['OPEN', 'IN_WORK', 'PAUSED'],\n  },\n\n  {\n    value: 'IN_WORK',\n    text: ' ---- in work',\n    badgeClass: 'info',\n    status: ['IN_WORK'],\n  },\n  {\n    value: 'PAUSED',\n    text: ' ---- paused',\n    badgeClass: 'warning',\n    status: ['PAUSED'],\n  },\n  {\n    value: 'FINISHED',\n    text: ' - FINISHED',\n    badgeClass: 'secondary',\n    status: ['FINISHED'],\n  },\n];\n\nfunction TasksFilter({ loading, tasks, filter, changeTaskFilter }) {\n  useEffect(() => {\n    localStorage.setItem('tasksFilter', filter);\n  }, [filter]);\n  if (loading) {\n    return <Loader />;\n  }\n\n  function showFilterValues() {\n    return filterValues.map(({ value, text, badgeClass, status }) => {\n      const count = status.reduce(\n        (acc, filterName) =>\n          acc + tasks.filter(({ STATUS }) => STATUS === filterName).length,\n        0\n      );\n      return (\n        <li\n          onClick={() => {\n            changeTaskFilter(value);\n          }}\n          key={value}\n          className={`list-group-item d-flex justify-content-between align-items-center ${\n            filter === value ? 'active' : ''\n          }`}\n        >\n          {text}\n          <span className={`badge badge-${badgeClass} badge-pill`}>\n            {count}\n          </span>\n        </li>\n      );\n    });\n  }\n\n  return (\n    <ul className='list-group'>\n      <li className='list-group-item d-flex justify-content-between align-items-center status'>\n        Status\n      </li>\n      {showFilterValues()}\n    </ul>\n  );\n}\nexport default connect(mapStatetoProps, mapDispatchtoProps)(TasksFilter);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { fetchProjects, addTaskRequest } from '../redux/actions';\n\nconst mapStatetoProps = (state) => ({\n  projects: state.projects.projects,\n});\n\nconst mapDispatchtoProps = {\n  fetchProjects,\n  addTaskRequest,\n};\n\nfunction TaskForm({ projects, fetchProjects, addTaskRequest }) {\n  const formref = useRef();\n  useEffect(() => {\n    if (projects.length === 0) {\n      fetchProjects();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const [currentFields, setField] = useState({});\n\n  const changeInputHandler = ({ target: { name, value } }) => {\n    setField((prev) => ({\n      ...prev,\n      ...{\n        [name]: value,\n      },\n    }));\n  };\n\n  const changeSelectHandler = (project) => ({ target: { name } }) => {\n    //console.log(project);\n    setField((prev) => ({\n      ...prev,\n      PROJECT: project,\n    }));\n  };\n\n  const showProjectsList = () => {\n    return projects.map((project) => (\n      <option\n        key={project.objectId}\n        onClick={changeSelectHandler(project)}\n        name='PROJECT'\n      >\n        {project.NAME}\n      </option>\n    ));\n  };\n  const submitFormHandler = (e) => {\n    e.preventDefault();\n    addTaskRequest(currentFields);\n    formref.current.reset();\n  };\n\n  return (\n    <Form\n      ref={formref}\n      className='task-form border-info'\n      onSubmit={submitFormHandler}\n    >\n      <Form.Group controlId='projectName'>\n        <Form.Label>Task name</Form.Label>\n        <Form.Control\n          name='TITLE'\n          required\n          onChange={changeInputHandler}\n          placeholder='Enter task name'\n        />\n      </Form.Group>\n\n      <Form.Group controlId='projectUrl'>\n        <Form.Label>Project</Form.Label>\n        <Form.Control as='select' custom>\n          <option>None project</option>\n          {showProjectsList()}\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group controlId='projectDesc'>\n        <Form.Label>Task description</Form.Label>\n        <CKEditor\n          onChange={(e, editor) => {\n            const data = editor.getData();\n            setField((prev) => ({\n              ...prev,\n              ...{\n                DESCRIPTION: data,\n              },\n            }));\n          }}\n          editor={ClassicEditor}\n        ></CKEditor>\n      </Form.Group>\n      <Button variant='primary' className='btn-lg' type='submit'>\n        Add\n      </Button>\n    </Form>\n  );\n}\nexport default connect(mapStatetoProps, mapDispatchtoProps)(TaskForm);\n","import React, { useEffect } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport TasksList from '../components/TasksList';\nimport TasksFilter from '../components/TasksFilter';\nimport { fetchTasks, showModal } from '../redux/actions';\n\nimport TaskForm from '../components/TaskForm';\n\nconst mapDispatchtoProps = {\n  fetchTasks,\n  showModal,\n};\n\nfunction TasksPage({ fetchTasks, showModal }) {\n  useEffect(() => {\n    //Load projects from Database\n    fetchTasks();\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <React.Fragment>\n      <Row>\n        <Col md={12}>\n          <div className='tasks-page'>\n            <header>\n              <Row>\n                <Col md={3}>\n                  <h1>Tasks</h1>\n                </Col>\n                <Col md={7}>\n                  <h2>All</h2>\n                </Col>\n                <Col md={2}>\n                  <Button\n                    type='button'\n                    className='btn btn-success'\n                    onClick={() =>\n                      showModal({\n                        title: 'Add task',\n                        component: TaskForm,\n                      })\n                    }\n                  >\n                    Add task\n                  </Button>\n                </Col>\n              </Row>\n            </header>\n\n            <Row>\n              <Col md={3}>\n                <TasksFilter />\n              </Col>\n              <Col md={9}>\n                <TasksList />\n                {/* <TaskForm /> */}\n              </Col>\n            </Row>\n          </div>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\nexport default connect(null, mapDispatchtoProps)(TasksPage);\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { hideModal } from '../redux/actions';\n\nconst mapDispatchtoProps = {\n  hideModal,\n};\nconst mapStatetoProps = (state) => {\n  return {\n    title: state.modal.title,\n    InnerComponent: state.modal.component,\n    show: state.modal.show,\n  };\n};\n\nfunction AppModal({ title, InnerComponent, show, hideModal }) {\n  return (\n    <Modal show={show} onHide={hideModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <InnerComponent />\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(AppModal);\n","import React, { useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchTask, changeTaskRequest } from '../redux/actions';\nimport Loader from '../components/Loader';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport Timer from './Timer';\nconst status = {\n  ALL: {\n    class: '',\n    text: 'All tasks',\n    included: ['OPEN', 'IN_WORK', 'PAUSED', 'FINISHED'],\n  },\n  OPEN: {\n    class: 'danger',\n    text: 'Open',\n    included: ['OPEN', 'IN_WORK', 'PAUSED'],\n  },\n  IN_WORK: {\n    class: 'info',\n    text: 'In work',\n    included: ['IN_WORK'],\n  },\n  PAUSED: {\n    class: 'warning',\n    text: 'Paused',\n    included: ['PAUSED'],\n  },\n  FINISHED: {\n    class: 'secondary',\n    text: 'Finished',\n    included: ['FINISHED'],\n  },\n};\nconst mapStatetoProps = (state) => ({\n  task: state.tasks.openTask,\n  loading: state.app.loading,\n});\n\nconst mapDispatchtoProps = { fetchTask, changeTaskRequest };\n\nfunction Task({ task, loading, fetchTask, changeTaskRequest }) {\n  let localtime = '';\n  const getSpentTime = (currenTime) => {\n    localtime = currenTime;\n  };\n\n  const { id } = useParams();\n  useEffect(() => {\n    // load task from database\n\n    fetchTask(id);\n\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n  const hadlePause = (e) => {\n    changeTaskRequest({ ...task, STATUS: 'PAUSED', SPENT_TIME: localtime });\n  };\n  const hadleStart = (e) => {\n    changeTaskRequest({ ...task, STATUS: 'IN_WORK', START_TIME: Date.now() });\n  };\n  const hadleFinish = (e) => {\n    changeTaskRequest({ ...task, STATUS: 'FINISHED', SPENT_TIME: localtime });\n  };\n  return task.TITLE ? (\n    <>\n      <div className='task'>\n        <Row>\n          <Col md={4}>\n            <h1>{task.TITLE}</h1>\n            {task.PROJECT ? (\n              <Link\n                className='badge badge-pill badge-primary'\n                to={`/projects/${task.PROJECT.objectId}`}\n              >\n                Project: {task.PROJECT.NAME}\n              </Link>\n            ) : null}\n          </Col>\n          <Col md={12}></Col>\n        </Row>\n        <header>\n          <Row>\n            <Col md={2}>\n              <div className='text-group'>\n                <span className={`badge badge-${status[task.STATUS].class}`}>\n                  {status[task.STATUS].text}\n                </span>\n              </div>\n            </Col>\n            <Col md={2}>\n              <div className='task-info'>\n                <span>Created:</span>\n                <span>{new Date(task.created).toLocaleDateString()}</span>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className='task-time'>\n                <Timer\n                  status={task.STATUS}\n                  spentTime={task.SPENT_TIME}\n                  start={task.START_TIME}\n                  getTime={getSpentTime}\n                />\n              </div>\n            </Col>\n            <Col md={1}></Col>\n            <Col md={4}>\n              <div className='task-btn'>\n                <Button\n                  className='btn-info'\n                  disabled={task.STATUS === 'IN_WORK' ? 'disabled' : ''}\n                  onClick={hadleStart}\n                >\n                  Start\n                </Button>\n                <Button\n                  className='btn-warning'\n                  disabled={\n                    task.STATUS === 'PAUSED' || task.STATUS === 'FINISHED'\n                      ? 'disabled'\n                      : ''\n                  }\n                  onClick={hadlePause}\n                >\n                  Pause\n                </Button>\n                <Button\n                  disabled={task.STATUS === 'FINISHED' ? 'disabled' : ''}\n                  className='btn-secondary'\n                  onClick={hadleFinish}\n                >\n                  Finish\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </header>\n      </div>\n    </>\n  ) : null;\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Task);\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Task from '../components/Task';\n\nfunction TaskPage() {\n  return (\n    <Row>\n      <Col md={12}>\n        <Task />\n      </Col>\n    </Row>\n  );\n}\n\nexport default TaskPage;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.scss';\nimport ProjectsPage from './pages/ProjectsPage';\nimport HomePage from './pages/HomePage';\nimport NoMatchPage from './pages/NoMatchPage';\nimport Navbar from './components/Navbar';\nimport { Container } from 'react-bootstrap';\nimport ProjectPage from './pages/ProjectPage';\nimport TasksPage from './pages/TasksPage';\nimport AppModal from './components/AppModal';\nimport TaskPage from './pages/TaskPage';\nfunction App() {\n  const baseHref = process.env.PUBLIC_URL ? process.env.PUBLIC_URL : '/';\n  return (\n    <BrowserRouter basename={baseHref}>\n      <Navbar />\n      <Container className='pt-3'>\n        <Switch>\n          <Route exact path={'/'} component={HomePage} />\n          <Route path={'/projects/:id'} component={ProjectPage} />\n          <Route path={'/projects/'} component={ProjectsPage} />\n          <Route path={'/tasks/:id'} component={TaskPage} />\n          <Route path={'/tasks/'} component={TasksPage} />\n\n          <Route component={NoMatchPage} />\n        </Switch>\n      </Container>\n      <AppModal />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  ADD_PROJECT,\n  FETCH_PROJECTS,\n  REMOVE_PROJECT,\n  SET_PROJECT,\n} from './types';\n\nconst initialState = {\n  projects: [],\n  openProject: {},\n};\n\nconst projectsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PROJECT:\n      return { ...state, openProject: { ...action.payload } };\n    case ADD_PROJECT:\n      return { ...state, projects: [action.payload, ...state.projects] };\n    case REMOVE_PROJECT:\n      console.log(action.payload);\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.objectId !== action.payload\n        ),\n      };\n    case FETCH_PROJECTS:\n      return { ...state, projects: action.payload };\n    default:\n      return state;\n  }\n};\nexport default projectsReducer;\n","import {\n  SET_TASK,\n  ADD_TASK,\n  REMOVE_TASK,\n  FETCH_TASKS,\n  CHANGE_TASK_FILTER,\n} from './types';\n\nconst dataFromStorage =\n  localStorage.getItem('tasksFilter') === null\n    ? 'OPEN'\n    : localStorage.getItem('tasksFilter');\n\nconst initialState = {\n  tasks: [],\n  openTask: {},\n  currentFilter: dataFromStorage,\n};\n\nconst tasksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_TASK_FILTER:\n      return { ...state, currentFilter: action.payload };\n\n    case SET_TASK:\n      return { ...state, openTask: { ...action.payload } };\n    case ADD_TASK:\n      return { ...state, tasks: [action.payload, ...state.tasks] };\n    case REMOVE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter((task) => task.objectId !== action.payload),\n      };\n    case FETCH_TASKS:\n      return { ...state, tasks: action.payload };\n\n    default:\n      return state;\n  }\n};\nexport default tasksReducer;\n","import {\n  SHOW_LOADER,\n  HIDE_LOADER,\n  SHOW_ALERT,\n  HIDE_ALERT,\n  SHOW_EDIT_FORM,\n  HIDE_EDIT_FORM,\n} from './types';\n\nconst initState = {\n  loading: false,\n  alert: null,\n  edit: false,\n};\n\nconst appReducer = (state = initState, action) => {\n  switch (action.type) {\n    case SHOW_EDIT_FORM:\n      return { ...state, edit: true };\n    case HIDE_EDIT_FORM:\n      return { ...state, edit: false };\n    case SHOW_LOADER:\n      return { ...state, loading: true };\n    case HIDE_LOADER:\n      return { ...state, loading: false };\n    case SHOW_ALERT:\n      return { ...state, alert: action.payload };\n    case HIDE_ALERT:\n      return { ...state, alert: null };\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","import { SHOW_MODAL, HIDE_MODAL } from './types';\n\nconst initState = {\n  title: null,\n  component: () => null,\n  show: false,\n};\n\nconst modalReducer = (state = initState, action) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        show: true,\n        component: action.payload.component,\n        title: action.payload.title,\n      };\n    case HIDE_MODAL:\n      return {\n        show: false,\n        component: () => null,\n        title: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n","import { combineReducers } from 'redux';\nimport projectsReducer from './projectsReducer';\nimport tasksReducer from './tasksReducer';\nimport appReducer from './appReducer';\nimport modalReducer from './modalReducer';\n\nconst rootReducer = combineReducers({\n  projects: projectsReducer,\n  app: appReducer,\n  tasks: tasksReducer,\n  modal: modalReducer,\n});\nexport default rootReducer;\n","// API REQUESTS\nimport axios from 'axios';\n\nconst PROJECTS_API =\n  'https://api.backendless.com/31AC8A7E-3AEA-1033-FF0E-4F94208FE800/66AAD1E3-F373-4750-96BA-D445FA4C046E/data/projects/';\n\nconst TASKS_API =\n  'https://api.backendless.com/31AC8A7E-3AEA-1033-FF0E-4F94208FE800/66AAD1E3-F373-4750-96BA-D445FA4C046E/data/tasks/';\n\nconst PROJECT_RELATION_API = '?loadRelations=PROJECT';\n\n// projects request\nexport async function changeProject(project) {\n  const { data } = await axios.put(PROJECTS_API.slice(0, -1), project);\n  return data;\n}\n\nexport async function fetchProject(id) {\n  const { data } = await axios.get(PROJECTS_API + id);\n  return data;\n}\n\nexport async function removeProject(id) {\n  const { data } = await axios.delete(PROJECTS_API + id);\n\n  return data;\n}\n\nexport async function fetchProjects() {\n  const { data } = await axios.get(PROJECTS_API.slice(0, -1));\n  return data;\n}\n\nexport async function addProject(project) {\n  const { data } = await axios.post(PROJECTS_API.slice(0, -1), project);\n  return data;\n}\n\n// tasks requests\nexport async function changeTask(task) {\n  const { data } = await axios.put(TASKS_API.slice(0, -1), task);\n  if (task.PROJECT) {\n    const project = await axios.put(PROJECTS_API.slice(0, -1), {\n      ...task.PROJECT,\n      TIMESPENT: Date.now() - task.PROJECT.TIMESPENT + data.SPENT_TIME,\n    });\n    return { ...data, PROJECT: project.data };\n  }\n\n  return data;\n}\n\nexport async function fetchTask(id) {\n  const { data } = await axios.get(TASKS_API + id);\n  return data;\n}\n\nexport async function fetchTasks() {\n  const { data } = await axios.get(\n    TASKS_API.slice(0, -1) + PROJECT_RELATION_API + '&pageSize=100'\n  );\n  return data;\n}\n\nexport async function addTask({ PROJECT, ...task }) {\n  const { data } = await axios.post(TASKS_API.slice(0, -1), task);\n\n  const tasktId = data.objectId;\n  const column = 'PROJECT';\n  const urs = TASKS_API + `${tasktId}/${column}`;\n  if (PROJECT) {\n    await axios.post(urs, [PROJECT.objectId]);\n  }\n\n  return {\n    ...data,\n    PROJECT,\n  };\n}\n","import { takeEvery, put, call } from 'redux-saga/effects';\nimport { showLoader, hideLoader, hideEditForm, hideModal } from './actions';\nimport {\n  FETCH_PROJECTS,\n  REQUEST_PROJECTS,\n  ADD_PROJECT,\n  ADD_PROJECT_REQUEST,\n  REMOVE_PROJECT,\n  REMOVE_PROJECT_REQUEST,\n  REQUEST_PROJECT,\n  SET_PROJECT,\n  CHANGE_PROJECT_REQUEST,\n  FETCH_TASKS,\n  REQUEST_TASKS,\n  ADD_TASK_REQUEST,\n  ADD_TASK,\n  REQUEST_TASK,\n  SET_TASK,\n  CHANGE_TASK_REQUEST,\n} from './types';\n\nimport {\n  removeProject,\n  addProject,\n  changeProject,\n  fetchProjects,\n  fetchProject,\n  fetchTasks,\n  addTask,\n  fetchTask,\n  changeTask,\n} from './api';\n\nexport function* sagaWatcher() {\n  yield takeEvery('*', (action) => {\n    //console.log(action);\n  });\n  // watch project's event\n  yield takeEvery(ADD_PROJECT_REQUEST, sagaAddProject);\n  yield takeEvery(CHANGE_PROJECT_REQUEST, sagaChangeProject);\n  yield takeEvery(REMOVE_PROJECT_REQUEST, sagaRemoveProject);\n  yield takeEvery(REQUEST_PROJECTS, sagaFetchProjects);\n  yield takeEvery(REQUEST_PROJECT, sagaFetchProject);\n\n  // watch task's event\n  yield takeEvery(REQUEST_TASKS, sagaFetchTasks);\n  yield takeEvery(REQUEST_TASK, sagaFetchTask);\n  yield takeEvery(ADD_TASK_REQUEST, sagaAddTask);\n  yield takeEvery(CHANGE_TASK_REQUEST, sagaChangeTask);\n}\n\nfunction* sagaChangeTask(action) {\n  try {\n    yield put(showLoader());\n    yield put(hideEditForm());\n    const payload = yield call(changeTask, action.payload);\n    yield put({ type: SET_TASK, payload });\n    yield put(hideLoader());\n  } catch (error) {\n    console.log(error);\n    yield put(hideLoader());\n  }\n}\n\nfunction* sagaFetchTask(action) {\n  try {\n    yield put(showLoader());\n    const payload = yield call(fetchTask, action.payload);\n    yield put({ type: SET_TASK, payload });\n    yield put(hideLoader());\n  } catch (error) {\n    console.log(error);\n    yield put(hideLoader());\n  }\n}\n\nfunction* sagaAddTask(action) {\n  try {\n    const payload = yield call(addTask, action.payload);\n    yield put({ type: ADD_TASK, payload });\n    yield put(hideModal());\n  } catch (error) {\n    console.log(error);\n    yield put(hideModal());\n  }\n}\n\nfunction* sagaChangeProject(action) {\n  try {\n    yield put(showLoader());\n    yield put(hideEditForm());\n    const payload = yield call(changeProject, action.payload);\n    yield put({ type: SET_PROJECT, payload });\n    yield put(hideLoader());\n  } catch (error) {\n    console.log(error);\n    yield put(hideLoader());\n  }\n}\n\nfunction* sagaFetchProject(action) {\n  try {\n    yield put(showLoader());\n    const payload = yield call(fetchProject, action.payload);\n    yield put({ type: SET_PROJECT, payload });\n    yield put(hideLoader());\n  } catch (error) {\n    console.log(error);\n    yield put(hideLoader());\n  }\n}\n\nfunction* sagaRemoveProject({ payload }) {\n  try {\n    yield call(removeProject, payload);\n    yield put({ type: REMOVE_PROJECT, payload: payload });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* sagaAddProject({ payload }) {\n  try {\n    const project = yield call(addProject, payload);\n    yield put({ type: ADD_PROJECT, payload: project });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* sagaFetchProjects() {\n  try {\n    yield put(showLoader());\n    const payload = yield call(fetchProjects);\n    yield put({ type: FETCH_PROJECTS, payload });\n    yield put(hideLoader());\n  } catch (error) {\n    console.log(error);\n    yield put(hideLoader());\n  }\n}\n\nfunction* sagaFetchTasks() {\n  try {\n    yield put(showLoader());\n    const payload = yield call(fetchTasks);\n    yield put({ type: FETCH_TASKS, payload });\n    yield put(hideLoader());\n  } catch (error) {\n    console.log(error);\n    yield put(hideLoader());\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/rootReducer';\nimport { sagaWatcher } from './redux/sagas';\nconst saga = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk, saga)\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nsaga.run(sagaWatcher);\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}